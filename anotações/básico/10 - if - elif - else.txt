                              if - elif - else
__________________________________________________________________________________
Condições:

No python a gente usa as condições para dar instruções especificas, usando os 
operadores, e principalmente os operadores de atribuições. Em ordem , a primeira 
condição que a gente usa é o "if" que signfica "se", e em um modo geral ela é usada
 em comparação! Um exemplo prático seria :

if 1 < 2:
   print("1 é menor que 2")

E para finalizar essa condição a gente usa o else, mas caso o resultado tenha 
mais de 2 possiveis de tipos de resultados , a gente usa o elif. ex:

x = 1
y = 2

if x == y:
    print('1 não é igual a 2')
elif x > y:
    print("também não")
else:
    print("agora sim")

Então oque ele fez aqui foi verificar se x(1) é igual a y(2), se ele não é então
ele verifica se x(1) é igual a y(2) oque obviamente não é verdade então ele 
executa o else como verdadeiro.

E então por ultimo, deu para entender que o "else" captura qualquer coisa que não
foi capturada pelas condições anteriores.

----------------------------------------------------------------------------------
Encurtando:

Então no primeiro caso ,onde a gente só tem uma instrução para executar, fica mais 
prático se a gente colocar tudo na mesma linha.ex:

- print("True") if 1 > 2 else print("False")

Então ele lê da seguinte forma: escreva(print) "True", SE(if) 1 for maior que (>) 2,
 se não(else) escreva "False". E sendo assim , por mais que não seja muito prático,
 você pode colocar várias condições na mesma linha:

- print("true") if 1 > 2 else print("False") if 1 == 2 else print("false")

então ele diz: escreva "true" se 1 for maior que dois , senão escreva "false", 
mas escreva isso se 1 for igual a 2 , se não escreva "false".

----------------------------------------------------------------------------------
Operadores lógicos: 

Podemos usar operadores lógicos como todos os restos dos operadores para definir se a
condição vai ser verdade ou não. E entre esse operadores temos o "and" , "or", "not".

-------------------------------------------------
And:

Então temos o "and" que só vai deixar que os comandos seja executado SE AS DUAS 
OU MAIS FOREM VERDADES. ex:

-if 1 < 2 and 1 != 2:
    print("1 é menor que 2 e tem um valor diferente de 2!")

Então: escreva "..." se 1 for menor E diferente 2
-------------------------------------------------
Or:

Só vai executar se uma das alternativas estiver certa

-if 1 > 2 or 1 != 2:
    print("1 é menor que 2 e tem um valor diferente de 2!")

escreva "..." se 1 for maior ou diferente de 2.
-------------------------------------------------
Not:

Só vai executa mas inverte os resultados:

-if not 1 > 2:
    print("1 é menor que 2 ")

Se 1 não for maior que dois , então escreva "1 é menor que 2"

----------------------------------------------------------------------------------
Aninhamento:

Você pode escrever if's dentros de outros if's e elif's, desse jeito:

if 10 > 1:
    print("10 é maior que 1")
    if 10 > 5:
        print("e também maior que 5!")
    else:
        print("10 não é maior que 5")

----------------------------------------------------------------------------------
Pass:

Se por algum motivo do destino , você não precise ou não queira colocar uma
 instrução dentro dos if's e elif's, coloque a instrução "pass" dentro deles.

if 1 >= 2:
    pass

__________________________________________________________________________________